{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to XLanOps Pages Site This site contains documentation for various projects that I have worked on over the years. Mostly for re-creating and assisting in building new projects. Projects layout Ubuntu and Docker for now. If you find this helpful please drop me a line or two...","title":"Home"},{"location":"#welcome-to-xlanops-pages-site","text":"This site contains documentation for various projects that I have worked on over the years. Mostly for re-creating and assisting in building new projects.","title":"Welcome to XLanOps Pages Site"},{"location":"#projects-layout","text":"Ubuntu and Docker for now. If you find this helpful please drop me a line or two...","title":"Projects layout"},{"location":"rocketchat/","text":"Rocketchat - Quick installtion Please follow previous documation about install Ubuntu. Will need to install Docker and Docker-Compose sudo mkdir -p /var/www/rocket.chat/data/runtime/db sudo mkdir -p /var/www/rocket.chat/data/dump sudo nano /var/www/rocket.chat/docker-compose.yml version: '2' services: rocketchat: image: rocket.chat:latest command: bash -c 'for i in `seq 1 30`; do node main.js && s=$$? && break || s=$$?; echo \"Tried $$i times. Waiting 5 secs...\"; sleep 5; done; (exit $$s)' restart: unless-stopped volumes: - ./uploads:/app/uploads environment: - PORT=3000 - ROOT_URL=http://chat.inumio.com - MONGO_URL=mongodb://mongo:27017/rocketchat - MONGO_OPLOG_URL=mongodb://mongo:27017/local - Accounts_UseDNSDomainCheck=True depends_on: - mongo ports: - 3000:3000 mongo: image: mongo:4.0 restart: unless-stopped volumes: - ./data/db:/data/db - ./data/dump:/dump command: mongod --smallfiles --oplogSize 128 --replSet rs0 --storageEngine=mmapv1 # this container's job is just run the command to initialize the replica set. # it will run the command and remove himself (it will not stay running) mongo-init-replica: image: mongo command: 'bash -c \"for i in `seq 1 30`; do mongo mongo/rocketchat --eval \\\"rs.initiate({ _id: ''rs0'', members: [ { _id: 0, host: ''localhost:27017'' } ]})\\\" && s=$$? && break || s=$$?; echo \\\"Tried $$i times. Waiting 5 secs...\\\"; sleep 5; done; (exit $$s)\"' depends_on: - mongo # hubot, the popular chatbot (add the bot user first and change the password before starting this image) hubot: image: rocketchat/hubot-rocketchat:latest restart: unless-stopped environment: - ROCKETCHAT_URL=165.114.165.21:3000 - ROCKETCHAT_ROOM=GENERAL - ROCKETCHAT_USER=bot - ROCKETCHAT_PASSWORD=botpassword - BOT_NAME=bot # you can add more scripts as you'd like here, they need to be installable by npm - EXTERNAL_SCRIPTS=hubot-help,hubot-seen,hubot-links,hubot-diagnostics depends_on: - rocketchat volumes: - ./scripts:/home/hubot/scripts # this is used to expose the hubot port for notifications on the host on port 3001, e.g. for hubot-jenkins-notifier ports: - 3001:8080","title":"RocketChat"},{"location":"rocketchat/#rocketchat-quick-installtion","text":"Please follow previous documation about install Ubuntu. Will need to install Docker and Docker-Compose sudo mkdir -p /var/www/rocket.chat/data/runtime/db sudo mkdir -p /var/www/rocket.chat/data/dump sudo nano /var/www/rocket.chat/docker-compose.yml version: '2' services: rocketchat: image: rocket.chat:latest command: bash -c 'for i in `seq 1 30`; do node main.js && s=$$? && break || s=$$?; echo \"Tried $$i times. Waiting 5 secs...\"; sleep 5; done; (exit $$s)' restart: unless-stopped volumes: - ./uploads:/app/uploads environment: - PORT=3000 - ROOT_URL=http://chat.inumio.com - MONGO_URL=mongodb://mongo:27017/rocketchat - MONGO_OPLOG_URL=mongodb://mongo:27017/local - Accounts_UseDNSDomainCheck=True depends_on: - mongo ports: - 3000:3000 mongo: image: mongo:4.0 restart: unless-stopped volumes: - ./data/db:/data/db - ./data/dump:/dump command: mongod --smallfiles --oplogSize 128 --replSet rs0 --storageEngine=mmapv1 # this container's job is just run the command to initialize the replica set. # it will run the command and remove himself (it will not stay running) mongo-init-replica: image: mongo command: 'bash -c \"for i in `seq 1 30`; do mongo mongo/rocketchat --eval \\\"rs.initiate({ _id: ''rs0'', members: [ { _id: 0, host: ''localhost:27017'' } ]})\\\" && s=$$? && break || s=$$?; echo \\\"Tried $$i times. Waiting 5 secs...\\\"; sleep 5; done; (exit $$s)\"' depends_on: - mongo # hubot, the popular chatbot (add the bot user first and change the password before starting this image) hubot: image: rocketchat/hubot-rocketchat:latest restart: unless-stopped environment: - ROCKETCHAT_URL=165.114.165.21:3000 - ROCKETCHAT_ROOM=GENERAL - ROCKETCHAT_USER=bot - ROCKETCHAT_PASSWORD=botpassword - BOT_NAME=bot # you can add more scripts as you'd like here, they need to be installable by npm - EXTERNAL_SCRIPTS=hubot-help,hubot-seen,hubot-links,hubot-diagnostics depends_on: - rocketchat volumes: - ./scripts:/home/hubot/scripts # this is used to expose the hubot port for notifications on the host on port 3001, e.g. for hubot-jenkins-notifier ports: - 3001:8080","title":"Rocketchat - Quick installtion"},{"location":"ubuntu/","text":"Linux Configuration Ubuntu clean installation. New account if don't to want use the default installed with os. Most of commands will require sudo acess. Add New Account. adduser mjones usermod -aG mjones TimeZone and NTP This will insure correct timezone for the system. dpkg-reconfigure tzdata apt install ntp service ntp status date Server Update apt update apt upgrade -y Setup Autoremove apt autoremove -y sh -c 'echo \" apt autoremove -y\" >> /etc/cron.monthly/autoremove' chmod +x /etc/cron.monthly/autoremove Upgrade distribution This should only be run if you want to upgrade from the current release to the next. apt dist-upgrade -y Create Private Key Pair ssh-keygen ssh-copy-id mjones@[server IP] Reboot and login as new user.","title":"Ubuntu"},{"location":"ubuntu/#linux-configuration","text":"Ubuntu clean installation. New account if don't to want use the default installed with os. Most of commands will require sudo acess.","title":"Linux Configuration"},{"location":"ubuntu/#add-new-account","text":"adduser mjones usermod -aG mjones","title":"Add New Account."},{"location":"ubuntu/#timezone-and-ntp","text":"This will insure correct timezone for the system. dpkg-reconfigure tzdata apt install ntp service ntp status date","title":"TimeZone and NTP"},{"location":"ubuntu/#server-update","text":"apt update apt upgrade -y","title":"Server Update"},{"location":"ubuntu/#setup-autoremove","text":"apt autoremove -y sh -c 'echo \" apt autoremove -y\" >> /etc/cron.monthly/autoremove' chmod +x /etc/cron.monthly/autoremove","title":"Setup Autoremove"},{"location":"ubuntu/#upgrade-distribution","text":"This should only be run if you want to upgrade from the current release to the next. apt dist-upgrade -y","title":"Upgrade distribution"},{"location":"ubuntu/#create-private-key-pair","text":"ssh-keygen ssh-copy-id mjones@[server IP] Reboot and login as new user.","title":"Create Private Key Pair"}]}